# 如有问题或希望了解该配置，请联系TR组
include:
  - project: tr/cicd
    file: "/component/default.yml"

variables:
  # 应用名称(最新版要求不要带api字样)
  APP_NAME: opstools-matchAndDeploy-java-api
  # 应用所属命名空间 如果不同环境不一样，则添加后缀配置（后缀配置优先）
  K8S_DEPLOYMENT_NAMESPACE: ops
  K8S_DEPLOYMENT_NAMESPACE_DEV: ops
  K8S_DEPLOYMENT_NAMESPACE_TEST: ops
  K8S_DEPLOYMENT_NAMESPACE_UAT: ops
  K8S_DEPLOYMENT_NAMESPACE_PRD: ops
  # 指定K8S内部署的应用名称 供 deploy阶段 使用
  # 例如部署完成后 k8s 可见的名称为 erp-dev-demo-api 或 erp-dev-demo-job
  K8S_DEPLOYMENT_NAME: ${K8S_DEPLOYMENT_NAMESPACE}-${CI_COMMIT_REF_NAME}-${APP_NAME}
  # 需要权限控制 仅控制UAT和PRD分支的构建权限 UAT只有测试同学有权限 PRD只有运维有权限
  NEED_POWER: "TRUE"
  # 域名后缀配置 dev环境将生成 jv-devdemoapi.colipu.com test uat一样，生产环境为 jv-demoapi.colipu.com 默认同时支持http和https
  # 如果是node项目不会增加jv-前缀
  APP_HOST: opstools.colipu.com
  # 针对.netcore项目，这里需要配置解决方案下子项目文件夹(启动项目)名称
  # APP_DIR: ""
  # 部分应用有特殊需求，例如需要容器内安装某些字体，那么可以在这里添加 docker 命令 自行处理
  # 多行需要用\\n换行，示例 ENV A=aaa\\nADD .gitlab-ci.yml .gitlab-ci.yml\\nRUN echo 1\\nCOPY config /app/config
  # DOCKER_COMMAND: ""

.compile-case:
  extends:
    - .compile-java
    # - .compile-netcore #支持.netcore
    # - .compile-go #支持go
